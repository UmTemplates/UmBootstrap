@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;
@inject Umbraco.Cms.Core.Web.IUmbracoContextFactory UmbracoContextFactory

@{
    Layout = null;
    // Get the feature properties from the block grid item
    var featureTitle = Model.Content.Value<string>("featurePropertyFeatureTitle");
    var featureDescription = Model.Content.Value<string>("featurePropertyFeatureDescription");
    var featureSummary = Model.Content.Value<string>("featurePropertyFeatureSummary");

    var umbracoContext = UmbracoContextFactory.EnsureUmbracoContext();

    string? colorLabel = null;
    //bool showFeature = true;
    bool? showFeature = null;


    // If the block grid item has settings, get the background colour
    if (Model.Settings != null)
    {
        var backgroundColour = Model.Settings.Value<ColorPickerValueConverter.PickedColor>("featureSettingsColourPicker");
        colorLabel = backgroundColour?.Label;
        //showFeature = Model.Settings.Value<bool>("featureSettingsHideDisplay");
        if (Model.Settings.HasValue("featureSettingsHideDisplay"))
        {
            showFeature = Model.Settings.Value<bool>("featureSettingsHideDisplay");
        }
    }
}

@if (!showFeature.HasValue || showFeature.Value)
// If the feature is not hidden or null, render the feature

{
    <section class="feature-item @Model.Content.ContentType.Alias" style="@(colorLabel != null ? $"background-color: var({colorLabel});" : "")">
        @if (!string.IsNullOrWhiteSpace(featureTitle) || !string.IsNullOrWhiteSpace(featureDescription))
        // If either the title or description is not empty, render the header
        {
            <header class="feature__header">
                @if (!string.IsNullOrWhiteSpace(featureTitle))
                // If the title is not empty, render the title
                {
                    <h2>@featureTitle</h2>
                }
                @if (!string.IsNullOrWhiteSpace(featureDescription))
                // If the description is not empty, render the description
                {
                    <p class="lead">@featureDescription</p>
                }
            </header>
        }
        <div class="feature__body">
            @RenderBody()
        </div>
        @if (!string.IsNullOrWhiteSpace(featureSummary))
        // If the summary is not empty, render the footer
        {
            <footer class="feature__footer p-3 text-primary-emphasis bg-primary-subtle border border-primary-subtle rounded-3">
                @if (!string.IsNullOrWhiteSpace(featureSummary))
                // If the summary is not empty, render the summary
                {
                    <p><small>@featureSummary</small></p>
                }
            </footer>
        }
    </section>
}
else
{
    // Required to render an empty block grid item on creation
    // if in preview mode in umbraco backoffice
    if (umbracoContext.UmbracoContext.InPreviewMode)
    {
        // Render only in back office preview mode
        <section class="feature @Model.Content.ContentType.Alias" style="@(colorLabel != null ? $"background-color: var({colorLabel});" : "")">
            @if (!string.IsNullOrWhiteSpace(featureTitle) || !string.IsNullOrWhiteSpace(featureDescription))
            // If either the title or description is not empty, render the header
            {
                <header class="feature__header">
                    @if (!string.IsNullOrWhiteSpace(featureTitle))
                    // If the title is not empty, render the title
                    {
                        <h2>@featureTitle</h2>
                    }
                    @if (!string.IsNullOrWhiteSpace(featureDescription))
                    // If the description is not empty, render the description
                    {
                        <p class="lead">@featureDescription</p>
                    }
                </header>
            }
            <div class="feature__body">
                @RenderBody()
            </div>
            @if (!string.IsNullOrWhiteSpace(featureSummary))
            // If the summary is not empty, render the footer
            {
                <footer class="feature__footer p-3 text-primary-emphasis bg-primary-subtle border border-primary-subtle rounded-3">
                    @if (!string.IsNullOrWhiteSpace(featureSummary))
                    // If the summary is not empty, render the summary
                    {
                        <p><small>@featureSummary</small></p>
                    }
                </footer>
            }
        </section>
    }
    else
    {
        // Render nothing in front end
        IgnoreBody();
    }
}


                    