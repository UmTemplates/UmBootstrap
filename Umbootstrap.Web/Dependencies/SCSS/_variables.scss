// Variables
//
// Variables should follow the `$component-state-property-size` formula for
// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.

// Color system

// scss-docs-start color-variables
$coral: #ff7f50 !default;
// scss-docs-end color-variables

// scss-docs-start colors-map
$custom-colors: (
    "coral": $coral
) !default;
// scss-docs-end colors-map

// Merge custom colors with Bootstrap's default $colors map
$colors: map-merge($colors, $custom-colors);

// fusv-disable
$coral-100: tint-color($coral, 80%) !default;
$coral-200: tint-color($coral, 60%) !default;
$coral-300: tint-color($coral, 40%) !default;
$coral-400: tint-color($coral, 20%) !default;
$coral-500: $coral !default;
$coral-600: shade-color($coral, 20%) !default;
$coral-700: shade-color($coral, 40%) !default;
$coral-800: shade-color($coral, 60%) !default;
$coral-900: shade-color($coral, 80%) !default;
// fusv-enable


$corals: (
  "coral-100": $coral-100,
  "coral-200": $coral-200,
  "coral-300": $coral-300,
  "coral-400": $coral-400,
  "coral-500": $coral-500,
  "coral-600": $coral-600,
  "coral-700": $coral-700,
  "coral-800": $coral-800,
  "coral-900": $coral-900
) !default;


// Generate RGB values for coral shades using map-loop
$corals-rgb: map-loop($corals, to-rgb, "$value") !default;

// Add coral RGB values as CSS variables in :root, [data-bs-theme=light]
:root,
[data-bs-theme=light] {
    @each $key, $value in $corals-rgb {
        --bs-#{$key}-rgb: #{$value};
    }
}

// Generate RGB values for indigo shades using map-loop
$indigos-rgb: map-loop($indigos, to-rgb, "$value") !default;

// Add indigo RGB values as CSS variables in :root, [data-bs-theme=light]
:root,
[data-bs-theme=light] {
    @each $key, $value in $indigos-rgb {
        --bs-#{$key}-rgb: #{$value};
    }
}

