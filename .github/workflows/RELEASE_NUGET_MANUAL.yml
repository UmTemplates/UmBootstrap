name: Release Package (manual)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version (semver, e.g. 1.2.3 or 1.2.3-alpha.1)'
        required: true

jobs:
  release:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 10.x

    - name: Validate version input
      id: validate
      shell: pwsh
      run: |
        $version = '${{ github.event.inputs.version }}'
        if ($version -notmatch '^[0-9]+\.[0-9]+\.[0-9]+(-[A-Za-z0-9]+(\.[A-Za-z0-9]+)*)?$') {
          Write-Error "Version '$version' is not a valid semantic version (X.Y.Z or X.Y.Z-prerelease)."
          exit 1
        }
        echo "version=$version" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8

    - name: Build
      run: dotnet build .\\template-pack.csproj -c Release /p:Version=${{ steps.validate.outputs.version }} /p:PackageVersion=${{ steps.validate.outputs.version }}

    - name: Pack
      run: dotnet pack .\\template-pack.csproj -c Release /p:Version=${{ steps.validate.outputs.version }} /p:PackageVersion=${{ steps.validate.outputs.version }} --no-build --output .

    - name: Push to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        dotnet nuget push **\\*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json
